<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- property为自定义变量，可通过${}获取 -->
    <!-- 设置日志格式 -->
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %thread [%logger] - %m%n"/>
    <!-- 设置html日志文件格式（把多余的无语义字符串和换行符去掉，否则多出几列难看的分隔符） -->
    <property name="pattern4Html" value="%d{yyyy-MM-dd HH:mm:ss.SSS}%-5level%thread%logger%m"/>
    <!-- 配置日志文件的输出路径，通常用绝对路径，这里为了方便管理而用先对路径 -->
    <property name="logDir" value="./logs"/>

    <!-- 配置控制台appender -->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出目标：System.out（黑色，默认）；System.err（红色） -->
        <target>System.out</target>
        <!-- 配置日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置格式 -->
            <pattern>${pattern}</pattern>
            <!-- 配置字符编码 -->
            <charset>UTF-8</charset>
        </encoder>

        <!-- 配置过滤器（细粒度的日志输出） -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash; 设置日志输出级别 &ndash;&gt;
            <level>INFO</level>
            &lt;!&ndash; ACCEPT:等于level中设置的级别，则打印日志 &ndash;&gt;
            <onMatch>ACCEPT</onMatch>
            &lt;!&ndash; DENY:不等于level中设置的级别，则屏蔽日志 &ndash;&gt;
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>

    <!-- 对控制台进行异步日志输出，输出到文件的不再作演示，生产环境建议配异步日志 -->
    <appender name="asyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 需要异步的appender -->
        <appender-ref ref="consoleAppender"/>
        <!-- 队列剩余容量小于discardingThreshold，则会丢弃TRACT、DEBUG、INFO级别的日志；默认值-1，为queueSize的20%；0不丢失日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 队列的最大容量，该值会影响性能，默认值为256 -->
        <queueSize>256</queueSize>
    </appender>

    <!-- 配置文件appender，默认是追加的方式 -->
    <appender name="fileAppender" class="ch.qos.logback.core.FileAppender">
        <!-- 配置日志保存文件 -->
        <file>${logDir}/logback.log</file>
        <!-- 配置日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置格式 -->
            <pattern>${pattern}</pattern>
            <!-- 配置字符编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 配置html文件appender -->
    <appender name="htmlFileAppender" class="ch.qos.logback.core.FileAppender">
        <!-- 配置日志保存文件 -->
        <file>${logDir}/logback.html</file>
        <!-- 配置日志输出格式 -->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <!-- 配置格式 -->
                <pattern>${pattern4Html}</pattern>
            </layout>
            <!-- 配置字符编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 配置可拆分归档文件appender -->
    <appender name="rollingFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 配置日志保存文件 -->
        <file>${logDir}/logback-rolling.log</file>
        <!-- 配置日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置格式 -->
            <pattern>${pattern}</pattern>
            <!-- 配置字符编码 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 配置拆分规则 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按照时间和压缩格式指定文件名，压缩格式为gz（若不想压缩则把.gz去掉，gz会产生很多tmp文件） -->
            <fileNamePattern>${logDir}/logback-rolling.%d{yyyy-MM-dd}.part%i.log.gz</fileNamePattern>
            <!-- 单文件大小 -->
            <maxFileSize>1KB</maxFileSize>
            <!-- 启动时扫描清除过期日志 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 总文件大小，超出则删除旧日志 -->
            <totalSizeCap>20GB</totalSizeCap>
            <!-- 保留最近n天日志 -->
            <maxHistory>90</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 自定义logger，additivity="false"表示不向上传递日志，避免root logger不会重复处理日志 -->
    <logger name="AccessLogger" level="INFO" additivity="false">
        <appender-ref ref="consoleAppender"/>
    </logger>

    <!-- 配置root logger -->
    <root level="ALL">
<!--        <appender-ref ref="consoleAppender"/>-->
<!--        <appender-ref ref="fileAppender"/>-->
<!--        <appender-ref ref="htmlFileAppender"/>-->
        <appender-ref ref="rollingFileAppender"/>
        <appender-ref ref="asyncAppender"/>
    </root>

</configuration>