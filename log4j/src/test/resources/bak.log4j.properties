### eg: [level], appenderName1, appenderName2, ... ###
log4j.rootLogger=trace, console, exampleDailyRollingFile

### 控制台输出 ###
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %t [%c] - %m%n
log4j.appender.console.encoding=UTF-8

### FileAppender示例 ###
log4j.appender.exampleFile=org.apache.log4j.FileAppender
# 日志文件保存位置
log4j.appender.exampleFile.file=logs/log4j-exampleFile.log
# 保存的日志级别，包含设置在内以及更高等级的日志。不指定则使用rootLogger设置的日志级别
log4j.appender.exampleFile.threshold=info
# 指定日志格式化器
log4j.appender.exampleFile.layout=org.apache.log4j.PatternLayout
# 日志格式
log4j.appender.exampleFile.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %t [%c] - %m%n
# 是否以追加的方式记录日志，默认也是true
log4j.appender.exampleFile.append=true
# 如果日志中有中文，设置编码
log4j.appender.exampleFile.encoding=UTF-8

### RollingFileAppender示例 ###
log4j.appender.exampleRollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.exampleRollingFile.file=logs/log4j-exampleRollingFile.log
log4j.appender.exampleRollingFile.threshold=info
log4j.appender.exampleRollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.exampleRollingFile.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %t [%c] - %m%n
log4j.appender.exampleRollingFile.append=true
log4j.appender.exampleRollingFile.encoding=UTF-8
# 独有项
# 文件大小(KB/MB/GB)
log4j.appender.exampleRollingFile.maxFileSize=1KB
# 文件备份数量（文件备份数量超过指定数量后，则新的日志覆盖最旧的那个日志文件）
log4j.appender.exampleRollingFile.maxBackupIndex=5

### DailyRollingFileAppender示例 ###
log4j.appender.exampleDailyRollingFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.exampleDailyRollingFile.file=logs/log4j-exampleDailyRollingFile.log
log4j.appender.exampleDailyRollingFile.threshold=info
log4j.appender.exampleDailyRollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.exampleDailyRollingFile.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %t [%c] - %m%n
log4j.appender.exampleDailyRollingFile.append=true
log4j.appender.exampleDailyRollingFile.encoding=UTF-8
# 独有项
# 示例按照秒来拆分，在实际中通常按照天来拆分
log4j.appender.exampleDailyRollingFile.datePattern='.'yyyy-MM-dd HH_mm_ss

### 持久化到数据库，数据库的那几个连接属性要注意大小写 ###
log4j.appender.logDB=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.logDB.layout=org.apache.log4j.PatternLayout
log4j.appender.logDB.threshold=error
log4j.appender.logDB.Driver=com.mysql.jdbc.Driver
log4j.appender.logDB.URL=jdbc:mysql://localhost:3306/logger-demo
log4j.appender.logDB.User=root
log4j.appender.logDB.Password=123456
log4j.appender.logDB.Sql=INSERT INTO t_log4j_logs (project_name, create_time, level, thread, category, filename, message) VALUES ('log4j', '%d{yyyy-MM-dd HH:mm:ss}', '%p', '%t', '%c', '%F', '%m')

### 自定义logger，格式：log4j.logger.logger名称=[level], appenderName1, appenderName2, ... ###
### mybatis显示sql ###
#log4j.logger.com.ibatis=debug
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
#
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=debug
#log4j.logger.java.sql.PreparedStatement=debug

### 自定义Logger之AccessLogger ###
log4j.logger.AccessLogger=info, console, accessLogger
# 避免向上传递，导致rootLogger也处理一遍这个日志，注意是log4j.additivity.logger名，不是appenderName
log4j.additivity.AccessLogger=false
log4j.appender.accessLogger=org.apache.log4j.FileAppender
log4j.appender.accessLogger.file=logs/log4j-accessLogger.log
log4j.appender.accessLogger.threshold=info
log4j.appender.accessLogger.layout=org.apache.log4j.PatternLayout
log4j.appender.accessLogger.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %t [%c] - %m%n
log4j.appender.accessLogger.append=true
log4j.appender.accessLogger.encoding=UTF-8